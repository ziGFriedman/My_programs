'''Найти корни квадратного уравнения'''
# Квадратное уравнение имеет вид
# ax2 + bx + c = 0
# При его решении сначала вычисляют дискриминант по формуле
# D = b2 - 4ac
# Если D > 0, то квадратное уравнение имеет два корня; если D = 0, то 1 корень; и если D < 0, то делают вывод, что корней нет.
# Таким образом, программа для нахождения корней квадратного уравнения может иметь три ветви условного оператора.
from math import sqrt

def quadr_equat(a, b, c):
    discr = b ** 2 - 4 * a * c
    if discr > 0:
        x1 = (-b + sqrt(discr)) / (2 * a)
        x2 = (-b - sqrt(discr)) / (2 * a)
        print('x1 = {0:.2f} \nx2 = {1:.2f}'.format(x1, x2))
    elif discr == 0:
        x = -b / (2 * a)
        print('x = {:.2f}'.format(x))
    else:
        print('Корней нет')

quadr_equat(3.2, -7.8, 1)
